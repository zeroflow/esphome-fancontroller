esphome:
  name: fancontroller-r2
  friendly_name: fancontroller-r2
  # Automatically add the mac address to the name
  # so you can use a single firmware for all devices
  name_add_mac_suffix: true

esp32:
  board: esp32-s2-saola-1
  framework:
    type: arduino

# To be able to get logs from the device via serial and api.
logger:

# API is a requirement of the dashboard import.
api:
# encryption:
#   key: "..."  # <----------- Merge your generated config here

# OTA is required for Over-the-Air updating
#ota: <----------- Enable this
# - platform: esphome # <----------- Merge your generated config here
#   password: "..."   # <----------- Merge your generated config here

wifi:
# ssid: !secret wifi_ssid # <----------- Enable this
# password: !secret wifi_password # <----------- Enable this

  ap: # <----------- Remove this if not needed

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device.
captive_portal:

web_server:
  port: 80


i2c:
  sda: GPIO33
  scl: GPIO34
  scan: true
  id: bus_a

# Example configuration entry
status_led:
  pin: 
    number: GPIO01
    inverted: true

# PWM Outputs
output:
  - platform: ledc
    pin: GPIO12
    id: pwm_fan1
    frequency: "25000 Hz"
  - platform: ledc
    pin: GPIO14
    id: pwm_fan2
    frequency: "25000 Hz"
  - platform: ledc
    pin: GPIO16
    id: pwm_fan3
    frequency: "25000 Hz"
  - platform: ledc
    pin: GPIO18
    id: pwm_fan4
    frequency: "25000 Hz"

fan:
  - platform: speed
    output: pwm_fan1
    name: "Fan 1"
    restore_mode: "RESTORE_DEFAULT_ON"
    id: fan1
  - platform: speed
    output: pwm_fan2
    name: "Fan 2"
    restore_mode: "RESTORE_DEFAULT_ON"
    id: fan2
  - platform: speed
    output: pwm_fan3
    name: "Fan 3"
    restore_mode: "RESTORE_DEFAULT_ON"
    id: fan3
  - platform: speed
    output: pwm_fan4
    name: "Fan 4"
    id: fan4
    restore_mode: "RESTORE_DEFAULT_ON"

sensor:
  - platform: hdc1080
    temperature:
      name: "Temperature"
    humidity:
      name: "Humidity"
    update_interval: 60s
  - platform: pulse_counter
    pin: 
      number: GPIO13  # Connect to any input PIN on the ESP
      mode: INPUT_PULLUP
    unit_of_measurement: 'RPM'
    id: fan1_speed
    name: Fan 1 Speed
    accuracy_decimals: 0
    filters:
      - multiply: 0.5  
  - platform: pulse_counter
    pin: 
      number: GPIO15  # Connect to any input PIN on the ESP
      mode: INPUT_PULLUP
    unit_of_measurement: 'RPM'
    id: fan2_speed
    name: Fan 2 Speed
    accuracy_decimals: 0
    filters:
      - multiply: 0.5 
  - platform: pulse_counter
    pin: 
      number: GPIO17  # Connect to any input PIN on the ESP
      mode: INPUT_PULLUP
    unit_of_measurement: 'RPM'
    id: fan3_speed
    name: Fan 3 Speed
    accuracy_decimals: 0
    filters:
      - multiply: 0.5 
  - platform: pulse_counter
    pin: 
      number: GPIO21  # Connect to any input PIN on the ESP
      mode: INPUT_PULLUP
    unit_of_measurement: 'RPM'
    id: fan4_speed
    name: Fan 4 Speed
    accuracy_decimals: 0
    filters:
      - multiply: 0.5 

binary_sensor:
  - platform: gpio
    pin: 
      number: GPIO45
      inverted: True
    name: "USR1"
    id: btn_usr1
  - platform: gpio
    pin: 
      number: GPIO42
      inverted: True
    name: "USR2"
    id: btn_usr2
  - platform: gpio
    pin: 
      number: GPIO41
      inverted: True
    name: "USR3"
    id: btn_usr3